@using web_server.Models;
@using web_server.Models.DBModels;
@model Dictionary<DateTime,List<StudentPayment>>;

@{
    Layout = "_Layout";
    User user = (User)ViewData["user"];
}
<head>
    <link rel="stylesheet" type="text/css" href="~/css/modal.css">

    <script type="text/javascript" src="~/js/sheetJs.js"></script>
    <script type="text/javascript" src="~/pdf/pdfmake.min.js"></script>
    <script type="text/javascript" src="~/pdf/vfs_fonts.js"></script>

</head>

<style id="tableStyle" type="text/css">
    table {
        border-collapse: collapse;
    }

        table td, table th {
            border: 1px solid black;
        }

        table tr:first-child th {
            border-top: 0;
        }

        table tr:last-child td {
            border-bottom: 0;
        }

        table tr td:first-child,
        table tr th:first-child {
            border-left: 0;
        }

        table tr td:last-child,
        table tr th:last-child {
            border-right: 0;
        }

    thead,
    tfoot {
        background-color: #0db4aa !important;
        color: #fff;
    }

    tbody {
        background-color: #e4f0f5;
    }

    caption {
        padding: 10px;
        caption-side: bottom;
    }

    table {
        border-collapse: collapse;
        border: 2px solid rgb(200, 200, 200);
        letter-spacing: 1px;
        font-family: sans-serif;
        font-size: 0.8rem;
    }

    td,
    th {
        border: 1px solid rgb(190, 190, 190);
        padding: 5px 10px;
    }

    td {
        text-align: center;
    }

    th {
        font-size: 25px;
        width: 300px;
    }

    td {
        font-size: 2px;
        width: 300px;
    }


    @@media (min-width: 1536px) {
        th {
            font-size: 20px !important;
            width: 200px !important;
        }

        td {
            font-size: 20px !important;
            width: 200px !important;
        }
        }

    @@media (min-width: 1920px) {
        th {
            font-size: 25px !important;
            width: 300px !important;
        }

        td {
            font-size: 20px !important;
            width: 300px !important;
        }
    }
</style>


<div style="margin-left:70px">
    <h2>Статистика студента @ViewData["statuser"].ToString()</h2>

    <div style="display :flex">
        <button onclick="printTable()" class="u-btn u-btn-round u-button-style u-custom-color-2 u-radius-10" style="margin-right: 50px;margin-top: 80px; color:white !important">
            Печать
        </button>

        <button onclick="downloadPDF()" class="u-btn u-btn-round u-button-style u-custom-color-2 u-radius-10" style="margin-right: 50px;margin-top: 80px; color:white !important">
            PDF
        </button>

        <button onclick="downloadXLS()" class="u-btn u-btn-round u-button-style u-custom-color-2 u-radius-10" style="margin-right: 50px;margin-top: 80px; color:white !important">
            EXCEL
        </button>
    </div>
  

</div>

<div id="tab2" style="margin-left:70px">
    <table class="table" id="myTable">
        <thead>
            <tr>
                <th>Дата оплаты</th>
                <th>Сумма оплаты</th>
                <th>Дата занятия</th>
                <th>Стоимость занятия</th>
                <th>Тип занятия</th>

            </tr>
        </thead>
        <tbody>

            @{
                foreach (var item in Model)
                {
                    foreach (var payment in item.Value)
                    {
                        <tr>

                            <td>
                                @{
                                    if (payment.PaymentDate != DateTime.MinValue)
                                    {
                                        @payment.PaymentDate.ToShortDateString()
                                    }
                                }

                            </td>

                            <td>
                                @{

                                    if (!string.IsNullOrEmpty(payment.PaymentAmount))
                                    {
                                        @payment.PaymentAmount
                                    }
                                }

                            </td>

                            <td>@payment.LessonDate.ToString("dd.MM.yyyy HH:mm")</td>
                            <td>@payment.LessonAmount</td>

                            @{
                                if (payment.LessonLooped)
                                {
                                    <td>Повторяющееся</td>
                                }
                                else
                                {
                                    <td>Разовое</td>
                                }
                            }

                        </tr>

                    }

                }
            }

        </tbody>
    </table>

</div>

<script type="text/javascript">
    function printTable() {
        const table = document.getElementById('myTable');
        const newWin = window.open('', 'Print-Window');
       
        newWin.document.body.innerHTML = table.outerHTML;
        newWin.focus();
        newWin.print();
        newWin.close();
    }


</script>
           
<script>
    function downloadPDF() {
        const table = document.getElementById('myTable');

        const parseTable = (table) => {
            const rows = table.querySelectorAll('tr');
            return Array.from(rows, row => {
                const columns = row.querySelectorAll('th,td');
                return Array.from(columns, column => column.textContent.trim());
            });
        }

        const tableData = parseTable(table);

        const docDefinition = {
            content: [
                { text: 'Статистика ученика @ViewData["statuser"].ToString()', style: 'header' },
                {
                    table: {
                        headerRows: 1,
                        widths: Array(tableData[0].length).fill('*'),
                        body: tableData
                    }
                }
            ],
            styles: {
                header: {
                    fontSize: 18,
                    bold: true,
                    margin: [0, 0, 0, 10]
                }
            }
        };

        pdfMake.createPdf(docDefinition).download('СтатистикаУченика_@ViewData["statuser"].ToString().Replace(" ", string.Empty)_.pdf');


    }

    function downloadXLS() {
        const table = document.getElementById('myTable');
        const sheetName = 'Sheet1';
        const sheet = XLSX.utils.table_to_sheet(table, {sheet: sheetName});
        const book = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(book, sheet, sheetName);
        const fileName = 'СтатистикаУченика_@ViewData["statuser"].ToString().Replace(" ", string.Empty)_.xls';
        XLSX.writeFile(book, fileName);
    }


</script>

        <script>
    document.getElementsByTagName('body')[0].style.backgroundColor = '#FAFAFA';

        </script>