@using System.Globalization;
@using web_server.Models;
@using web_server.Models.DBModels;

@model DisplayModelShedule
@{
    Layout = "_Layout";
}
<style>
   
    table{
        /*border-collapse: collapse;*/
    }
        tbody td {
            border: 1px solid #DBDBDB;
        }

    tbody tr:first-child th {
            border-top: 0;
        }

    tbody tr:last-child td {
            border-bottom: 0;
        }

    tbody tr td:first-child,
    tbody tr th:first-child {
            border-left: 0;
        }

    tbody tr td:last-child,
    tbody tr th:last-child {
            border-right: 0;
        }

 /*   form {
        display: inline-block
    }*/

    thead,
tfoot {
    background-color: #fff;
    color: black;
}

tbody {
    background-color: #fff;
        border: 2px solid #ccc;
    }

caption {
    padding: 10px;
    caption-side: bottom;
}

table {
         font-family: sans-serif;
        /*border: 2px solid #DBDBDB;
        border-radius: 10px;*/
        background-color: white;
       border-spacing : 0 !important;
        letter-spacing: 1px;
    font-size: 0.8rem;
}

    .brd > th:nth-child(1) {
        background: #fff;
        border: 2px solid black;
        border-bottom:0;
        border-radius: 20px 20px 0px 0px;
    }
    
    .brd2 > th:nth-child(1) {
        background: #fff;
        
        border: 2px solid black;
        border-top: 0;
        border-right: 0;
        border-radius: 0px 0px 0px 20px;
    }

    .brd2 > th:nth-child(25) {
        background: #fff;
       
        border: 2px solid black;
        border-top: 0;
        border-left: 0;
        border-radius: 0px 0px 20px 0px;
    }

 
    tbody {
        border-top: 3px solid #fff;
    }

   /* tbody > tr:nth-child(1) {
        border-top:0;
    }*/
    th{
        font-size:20px;
        font-weight:normal;
    }
td,
th {
    /*border: none;*/
    padding: 5px 10px;
    }

td {
    text-align: center;
    width:45px !important;
}
form{
        display: inline-block;
        height: 10px;
}

    .tableHeader {
       width:200px;
       padding-bottom:15px;
}
thead{
        /*border: 2px solid black;
        border-radius: 10px;*/
        /*border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        border: 2px solid #000;*/
        background-color: white;
        letter-spacing: 1px;
}
</style>

<link rel="stylesheet" type="text/css" href="~/css/modal.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="~/js/datepicker_ru.js"></script>

<div oncontextmenu="return false;">
    <script>

        function setDate(el){
            document.getElementById('setdate').value = el.value;
            document.getElementById('setDateForm').submit();
        }

    </script>

    <div>
        
    </div>
    <table>
        <thead >
           <tr class="brd" style="height:20px">
            <th colspan="25" style="padding-top:20px;font-weight:bold !important">
                <form method="get" action="/manageschool/setDateM" id="setDateForm" style="display: inline-block;">
                    <input hidden="hidden" id="setdate" name="setdate" value="" />
                    <input style="display:none" type="text" onchange="setDate(this)" id="datepicker" name="datepicker">
                    <img id="datepicker-btn" src="~/content/images/calendar.svg" style="width:20px;height:20px;cursor:pointer;margin-right:5px" />
                </form>
                Сегодня: @DateTime.Parse(DateTime.Now.Date.ToString()).ToString("dd.MM.yyyy")

            </th>
        </tr>
            <tr class="brd2">
              <th>
                    <div class="tableHeader">
                        <form method="get" id="downdate" action="/manageschool/downDateM" style="padding-left:10px;padding-top:20px;padding-bottom:10px;">
                            <input hidden="hidden" id="date" name="date" value="@Model.Date" />
                            <img onclick="document.getElementById('downdate').submit()" src="/content/images/Vector.svg" style="transform: rotate(-180deg);transform: rotate(-90deg);cursor:  pointer;width:25px" />
                        </form>
                        <label style="padding-top:10px;padding-bottom:10px;font-size:20pt;padding-left:10px;padding-right:10px">@Model.Date.ToString("dd MMM")</label>

                        <form method="get" id="update" action="/manageschool/upDateM" style="padding-top:10px;padding-bottom:10px;">
                            <input hidden="hidden" id="date" name="date" value="@Model.Date" />
                            <img onclick="document.getElementById('update').submit()" src="/content/images/Vector.svg" style="cursor: pointer;width:25px;transform: rotate(90deg)" />
                        </form>
                       

                    </div>
            
            </th>

                @{

                    var w_days = new List<DayOfWeek>()
            {
            DayOfWeek.Monday, DayOfWeek.Tuesday, DayOfWeek.Wednesday, DayOfWeek.Thursday, DayOfWeek.Friday, DayOfWeek.Saturday, DayOfWeek.Sunday
            };

                    var hours = new List<string>()
            {
            "0", "1", "2", "3", "4", "5", "6", "7","8", "9","10", "11","12", "13","14", "15","16", "17",
            "18", "19","20", "21","22", "23"
            };

                    foreach (var hour in hours)
                    {
                        if(hour == "23")
                        {
                            <th style="height:40px !important;border: 2px solid black;border-top:0;border-left:0">
                                @hour
                            </th>
                        }
                        else
                        {
                            <th style="height:40px !important;border: 2px solid black;border-top:0;border-left:0;border-right:0;">
                                @hour
                            </th>
                        }
                       
                    }
                }

        </tr>
            </thead>
        <tbody>

            @{
                var tutors = new List<Tutor>();
                tutors = (List<Tutor>)ViewData["Tutors"];
                int countA = 0, countB = 0;

                foreach (var tutor in tutors)
                {

                    <tr>
                        <td style="vertical-align: middle;text-align: center;">
                            @{
                                var href = tutor.UserId;
                            }
                            <a href="http://localhost:23571/about/details?id=@href">
                        
                        <img src="@tutor.PhotoUrl" style="float:left;width:40px;height:40px; border: 1.5px solid #f5f6fa;border-radius:50% !important; margin-right:10px;margin-left:10px" />
                            </a>
                        <span style="font-size:16px;line-height: 40px;font-size: 16px;">@tutor.FirstName @tutor.LastName</span>
                        </td>
                    @{
                            var tutor_schedule = Model.Schedules.Where(m => m.TutorId == tutor.UserId);
                            //var tutor_reschedule = new List<RescheduledLessons>();
                           // tutor_reschedule = (List<RescheduledLessons>)ViewData["rescheduled"];
                            foreach (var hour in hours)
                            {
                                <td>
                                
                                    @{
                                        var date = DateTime.ParseExact(Model.Date.ToString("dd.MM.yyyy") + " " + hour, "dd.MM.yyyy H", CultureInfo.InvariantCulture);

                                        foreach (var schedule in tutor_schedule)
                                        {

                                            if (date < schedule.StartDate)
                                            {
                                                continue;
                                            }

                                            if (schedule.RemoveDate != DateTime.Parse("01.01.0001 0:00:00"))
                                            {
                                                if (date >= schedule.RemoveDate)
                                                {
                                                    continue;
                                                }
                                            }
                                            if (schedule.RescheduledDate != DateTime.Parse("01.01.0001 0:00:00"))
                                            {
                                                if (date > schedule.RescheduledDate && schedule.Looped == true)
                                                {
                                                    continue;
                                                }

                                            }
                                            if (schedule.StartDate.DayOfWeek == date.DayOfWeek)
                                            {
                                                if (schedule.Looped != true)
                                                {
                                                    if (schedule.StartDate != date)
                                                    {
                                                        continue;
                                                    }    
                                                }

                                                if (schedule.StartDate.Hour == date.Hour)
                                                {
                                                    var textMouse = $"Курс: {schedule.Course?.Title}; Цель: {schedule.Course?.Goal?.Title}; Имя и фамилия: {schedule.UserName}; ";
                                                    textMouse += $"Репетитор: {schedule.TutorFullName}";
                                                    if (schedule.Status == Status.Перенесен || schedule.RescheduledLessons.Count > 0)
                                                    {

                                                        foreach (var resc in schedule.RescheduledLessons)
                                                        {
                                                                if(date == resc.OldTime)
                                                                {
                                                                    textMouse += $"Перенесен на: {resc.NewTime};Причина:{resc.Reason};Инициатор:{resc.Initiator}";
                                                                        break;
                                                                }  
                                                        }

                                                        if(schedule.RescheduledDate == date)
                                                        {
                                                                textMouse += $"Постоянный перенос на: {schedule.NewDate.ToString("dd.MM.yyyy HH:mm")}";
                                                        }
                                                    }

                                                        var label = $"label_{schedule.UserId}_{schedule.StartDate.ToString("dd-MM-yyyy-HH-mm")}_{countA}_{countB}";
                                                        <style>
                                                            label[data-title] {
                                                                position: relative;
                                                                display: inline-block;
                                                                cursor: pointer;
                                                                border-bottom: 1px dashed #000;
                                                            }

                                                                label[data-title]:hover:before {
                                                                    content: attr(data-title);
                                                                    position: absolute;
                                                                    width: 150px;
                                                                    color: #fff;
                                                                    height: auto;
                                                                    word-wrap: break-word;
                                                                    background: #000;
                                                                    padding: 5px;
                                                                    border-radius: 4px;
                                                                    bottom: 25px;
                                                                    left: 50px;
                                                                }
                                                        </style>

                                                    if (string.IsNullOrEmpty(schedule.UserName))
                                                    {
                                                    <label data-title="@textMouse" id="@label" class="@label" style="width:150px;height:50px;background-color:turquoise;border-radius:10px"></label>
                                                    }
                                                    else
                                                    {
                                                        var username = schedule.UserName.ToString().Split(" ");
                                                        <label data-title="@textMouse" id="@label" class="@label" style="background-color:lightblue;width:150px;height:50px;border-radius:10px">@username[0].ToString() <br />@username[1].ToString() </label>

                                                        }

                                                    if (!schedule.Looped)
                                                    {
                                                        var text4 = "Разовое занятие";
                                                        <label style="background-color:orange;width:150px" data-title="@text4">(*)</label>

                                                    }
                                                        if (schedule.ReadyDates.Count > 0)
                                                        {

                                                            foreach (var readyDate in schedule.ReadyDates)
                                                            {

                                                                if (readyDate.Date == date)
                                                                {
                                                                    <script>
                                                                        document.getElementsByClassName('@label')[0].style.backgroundColor = "mediumblue";
                                                                        document.getElementsByClassName('@label')[0].style.color = "white";
                                                                    </script>
                                                                }
                                                            }

                                                        }
                                                        else
                                                        {
                                                            if (schedule.Status == Status.Проведен)
                                                            {
                                                                <script>
                                                                    document.getElementsByClassName('@label')[0].style.backgroundColor = "mediumblue";
                                                                    document.getElementsByClassName('@label')[0].style.color = "white";
                                                                </script>

                                                            }
                                                        }
                                                    if (schedule.WaitPaymentDate != DateTime.MinValue)
                                                    {

                                                        if (((Dictionary<int, DateTime>)ViewData["waited"]).Count != 0)
                                                        {
                                                            if (((Dictionary<int, DateTime>)ViewData["waited"]).ContainsKey(schedule.UserId))
                                                            {
                                                                var time = ((Dictionary<int, DateTime>)ViewData["waited"])[schedule.UserId];
                                                                if (schedule.Looped)
                                                                {
                                                                    if (schedule.WaitPaymentDate == date)
                                                                    {
                                                                        if (schedule.ReadyDates.Count > 0)
                                                                        {
                                                                            if (date > schedule.ReadyDates.Last().Date)
                                                                            {
                                                                                <script>

                                                                                    @{
                                                                                        var text2 = "Занятие не оплачено.";
                                                                                        var mod = (Dictionary<int, bool>)ViewData["firstPay"];
                                                                                        if (mod[schedule.UserId] == false)
                                                                                        {
                                                                                            DateTime now = DateTime.Now;
                                                                                            DateTime target = time.AddHours(24);

                                                                                            TimeSpan diff = target - now;

                                                                                            double totalSeconds = diff.TotalSeconds;

                                                                                            text2 += $"Для оплаты занятия у ученика осталось: {TimeSpan.FromSeconds(totalSeconds).ToString(@"h\:mm\:ss")}";

                                                                                        }

                                                                                    }

                                                                                </script>

                                                                                <label style="background-color:yellow;width:150px" data-title="@text2">(!)</label>
                                                                            }
                                                                        }
                                                                        else
                                                                        {

                                                                            <script>

                                                                                @{
                                                                                    var text2 = "Занятие не оплачено.";
                                                                                    var mod = (Dictionary<int, bool>)ViewData["firstPay"];
                                                                                    if (mod[schedule.UserId] == false)
                                                                                    {
                                                                                        DateTime now = DateTime.Now;
                                                                                        DateTime target = time.AddHours(24);

                                                                                        TimeSpan diff = target - now;

                                                                                        double totalSeconds = diff.TotalSeconds;

                                                                                        text2 += $"Для оплаты занятия у ученика осталось: {TimeSpan.FromSeconds(totalSeconds).ToString(@"h\:mm\:ss")}";

                                                                                    }

                                                                                }


                                                                            </script>
                                                                            <label style="background-color:yellow;width:150px" data-title="@text2">(!)</label>
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (schedule.ReadyDates.Count > 0)
                                                                    {
                                                                        if (date > schedule.ReadyDates.Last().Date)
                                                                        {
                                                                            <script>

                                                                                @{
                                                                                    var text2 = "Занятие не оплачено.";
                                                                                    var mod = (Dictionary<int, bool>)ViewData["firstPay"];
                                                                                    if (mod[schedule.UserId] == false)
                                                                                    {
                                                                                        DateTime now = DateTime.Now;
                                                                                        DateTime target = time.AddHours(24);

                                                                                        TimeSpan diff = target - now;

                                                                                        double totalSeconds = diff.TotalSeconds;

                                                                                        text2 += $"Для оплаты занятия у ученика осталось: {TimeSpan.FromSeconds(totalSeconds).ToString(@"h\:mm\:ss")}";

                                                                                    }

                                                                                }


                                                                            </script>
                                                                            <label style="background-color:yellow;width:150px" data-title="@text2">(!)</label>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (schedule.Status != Status.Проведен)
                                                                        {
                                                                            <script>

                                                                                @{
                                                                                    var text2 = "Занятие не оплачено.";
                                                                                    var mod = (Dictionary<int, bool>)ViewData["firstPay"];
                                                                                    if (mod[schedule.UserId] == false)
                                                                                    {
                                                                                        DateTime now = DateTime.Now;
                                                                                        DateTime target = time.AddHours(24);

                                                                                        TimeSpan diff = target - now;

                                                                                        double totalSeconds = diff.TotalSeconds;

                                                                                        text2 += $"Для оплаты занятия у ученика осталось: {TimeSpan.FromSeconds(totalSeconds).ToString(@"h\:mm\:ss")}";

                                                                                    }

                                                                                }


                                                                            </script>
                                                                            <label style="background-color:yellow;width:150px" data-title="@text2">(!)</label>

                                                                        }

                                                                    }
                                                                }
                                                            }

                                                        }
                                                    }

                                                    if (schedule.SkippedDates.Count > 0)
                                                    {
                                                        foreach (var skip in schedule.SkippedDates)
                                                        {
                                                            if (skip.Date == date)
                                                            {
                                                                <script>
                                                                        document.getElementsByClassName('@label')[0].style.backgroundColor = "darkred";
                                                                    document.getElementsByClassName('@label')[0].style.color = "white";
                                                                </script>
                                                            }
                                                        }
                                                    }


                                                    if (schedule.RescheduledDate != DateTime.Parse("01.01.0001 0:00:00"))
                                                    {
                                                        if (schedule.RescheduledDate == date)
                                                        {
                                                            <script>
                                                                    document.getElementsByClassName('@label')[0].style.backgroundColor = "gray";
                                                                document.getElementsByClassName('@label')[0].style.color = "white";
                                                            </script>
                                                        }
                                                    }
                                                        if (schedule.RescheduledLessons.Count > 0)
                                                        {
                                                            foreach (var less in schedule.RescheduledLessons)
                                                            {
                                                                if (less.OldTime == date)
                                                                {
                                                                    <script>
                                                                            document.getElementsByClassName('@label')[0].style.backgroundColor = "gray";
                                                                        document.getElementsByClassName('@label')[0].style.color = "white";
                                                                    </script>
                                                                }
                                                            }
                                                           
                                                        }

                                                    }
                                                }
                                          
                                        }
                                        countA++;


                                }
                                 
                                </td>
                            }
                            countB++;
                    }
                
                    </tr>
                }
        }
        </tbody>

    </table>


</div>
